# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      name:
        type: choice
        default: go-service1
        description: select packages
        options:
          - go-service1
          - go-service2
          - py-service1
      in2:
        type: boolean
        description: "boolean param"
        default: False
      in3:
        type: string
        description: enter a value of a param
        default: three
      in4:
        type: environment
        description: set env variable
        default: test
      in5:
        type: string
        description: five
        default: five
      in6:
        type: string
        description: six
        default: six
      in7:
        type: string
        description: enter a value of a param
        default: seven
      in8:
        type: string
        description: enter a value of a param
        default: eight
      in9:
        type: string
        description: enter a value of a param
        default: nine
      in10:
        type: string
        description: enter a value of a param
        default: ten
      in11:
           type: string
           description: enter a value of a param
           default: eleven
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command to List files of a repository
      - name: Run a one-line script
        id: step1
        shell: pwsh
        run: >
          "childitems = want_to_get_output" >> $GITHUB_OUTPUT

      # display output
      - name: will display output of a last command
        id: step2
        shell: pwsh
        run: Write-Host ${{ steps.step1.outputs.childitems }}

      - run: echo "🍏 This job's status is ${{ job.status }}."
